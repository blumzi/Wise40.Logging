#!/bin/bash

# vim: set fileformat=unix

shopt -s nullglob

prog=$(basename ${0})
everybody=( "shaik@tauex.tau.ac.il" "mbowman@lco.global" "theblumz@gmail.com" )
developer="theblumz@gmail.com"

tau=( "shaik@tauex.tau.ac.il"  "theblumz@gmail.com" )
tau_recipients=${tau[@]}
tau_recipients=${tau_recipients//[[:space:]]/ , }

mail_to=( ${everybody[@]} )
mail_recipients=${mail_to[@]}
mail_recipients=${mail_recipients//[[:space:]]/ , }

mail_server="mxout.tau.ac.il"
mail_from="Wise40@tau.ac.il"
nomail=false

log_top=/cygdrive/c/Wise40/Logs
log_date=$(date -d yesterday +"%Y-%m-%d")
log_friendly_date=$(date -d yesterday +"%Y-%b-%d")

options=$( getopt -o d:n --long date:,nomail -- "$@" )
if [ $? -ne 0 ]; then
    echo "Usage: ${prog} [-d|--date yyyy-mmm-dd] [-n|--nomail]"
    exit 1
fi

function log() {
    logger -t "${prog}" "${*}"
}

eval set -- "${options}"
while true; do
    case "${1}" in
    -d|--date)
        if [[ ${2} =~ 2[[:digit:]][[:digit:]][[:digit:]]-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-[0-3][[:digit:]] ]]; then
            log_friendly_date="${2}"
            log_date=$( echo ${log_friendly_date} | sed \
                -e 's;Jan;01;' \
                -e 's;Feb;02;' \
                -e 's;Mar;03;' \
                -e 's;Apr;04;' \
                -e 's;May;05;' \
                -e 's;Jun;06;' \
                -e 's;Jul;07;' \
                -e 's;Aug;08;' \
                -e 's;Sep;09;' \
                -e 's;Oct;10;' \
                -e 's;Now;11;' \
                -e 's;Dec;12;' )
                shift 2
        else
            echo "${prog}: bad date ${2}"
            exit
        fi

        shift 2
        break
        ;;

    -n|--nomail)
        nomail=true
        shift
        break
        ;;

    --)
        shift
        break
        ;;
    esac
done
log_dir="${log_top}/${log_date}"

export PATH="${log_top}:${log_top}/bin:${PATH}"

if [ ! -d "${log_dir}" ]; then
    echo "${prog}: No such directory ${log_dir}"
    exit
fi

cd ${log_dir}
activities_base=activities-${log_friendly_date}
activities_txt=${activities_base}.txt
activities_archive=${activities_base}.zip

ascom_log="ASCOM.RemoteServer.txt"

log "Running in ${log_dir}"
if [ ! -e ${activities_archive} ]; then
    if [ ! -r ${ascom_log} ]; then
        log "Missing ${ascom_log}, exiting"
        exit
    fi

    log "Extracting activities - started"
    extract-activities < ${ascom_log} > ${activities_txt}
    zip -q -l -9 ${activities_archive} ${activities_txt}
    log "Extracting activities - done"
fi

watcher_logs=( $(echo  Wise40Watcher.*.txt) )
if [ ${#watcher_logs[*]} -gt 0 ]; then
    grep "Reconnected WiFi network" ${watcher_logs[*]} | sed 's; with.*;;' > wifi_issues.txt
    test -s wifi_issues.txt || /bin/rm wifi_issues.txt
fi

export PATH="${log_top}/bin:${PATH}"
log "Splitting slews - started"
split-slews < ASCOM.RemoteServer.txt

cd slews
for i in slew-0*; do
    split-rates $i
done
cd ..
log "Splitting slews - done"

suspects_txt=suspects.txt
suspects_archive=suspects.zip
grep SUSPECT: ${ascom_log} > ${suspects_txt}
if [ ! -s ${suspects_txt} ]; then
    rm -f ${suspects_txt}
fi

if ${nomail}; then
    exit
fi

mail_subject="Wise40 activities for ${log_friendly_date}"

log "Mailing results - started"
powershell -Command "& { Send-MailMessage -To ${mail_recipients} -From \"${mail_from}\" -Subject \"${mail_subject}\" -Body \"Please find attached ...\" -SmtpServer \"${mail_server}\" -Attachments \"C:\Wise40\Logs\\${log_date}\\${activities_archive}\" }"

if [ -s ${suspects_txt} ]; then
    zip -q -l -9 ${suspects_archive} ${suspects_txt}
    powershell -Command "& { Send-MailMessage -To ${tau_recipients} -From \"${mail_from}\" -Subject \"Wise40 suspects for ${log_friendly_date}\" -Body \"Please find attached ...\" -SmtpServer \"${mail_server}\" -Attachments \"C:\Wise40\Logs\\${log_date}\\${suspects_archive}\" }"
fi

for issue_file in *_issues.txt; do
    issue_type=${issue_file//_issues.txt}
    subject="Wise40 ${issue_type} issues for ${log_friendly_date}"
    powershell -Command "& { Send-MailMessage -To ${tau_recipients} -From \"${mail_from}\" -Subject \"${subject}\" -Body \"Please find attached ...\" -SmtpServer \"${mail_server}\" -Attachments \"C:\Wise40\Logs\\${log_date}\\${issue_file}\" }"
done
log "Mailing results - done"

latest="$(ls -1tr /cygdrive/c/Program\ Files\ \(x86\)/ASCOM/SystemLogs/*/ASCOM.RemoteServer*| tail -1)"
output=${log_dir}/"$(basename "${latest}" .txt)".parsed.txt
# TBD: this may override the latest output file
log "Started parsing ASCOM log \"${latest}\" -> \"${output}\""
mkdir -p "$(dirname "${output}")"
parse-ASCOM-server-log.awk < "${latest}}" > "${output}" &
log "Done parsing ASCOM log"

log "Done."
